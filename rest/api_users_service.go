/*
 * User Manager API
 *
 * Description of a user manager API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package rest

import (
	"context"
	"net/http"
	"errors"
)

// UsersApiService is a service that implements the logic for the UsersApiServicer
// This service should implement the business logic for every endpoint for the UsersApi API.
// Include any external packages or services that will be required by this service.
type UsersApiService struct {
}

// NewUsersApiService creates a default api service
func NewUsersApiService() UsersApiServicer {
	return &UsersApiService{}
}

// AuthenticateUser - Authenticate a registered user by password, returns a jwt token
func (s *UsersApiService) AuthenticateUser(ctx context.Context, userData UserData) (ImplResponse, error) {
	// TODO - update AuthenticateUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, string{}) or use other options such as http.Ok ...
	//return Response(200, string{}), nil

	//TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	//return Response(400, string{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(500, string{}) or use other options such as http.Ok ...
	//return Response(500, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AuthenticateUser method not implemented")
}

// ChangePassword - Change the password of the user, authentication provided either by token of user or of an admin
func (s *UsersApiService) ChangePassword(ctx context.Context, userData UserData) (ImplResponse, error) {
	// TODO - update ChangePassword with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UserIdentity{}) or use other options such as http.Ok ...
	//return Response(200, UserIdentity{}), nil

	//TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	//return Response(400, string{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(500, string{}) or use other options such as http.Ok ...
	//return Response(500, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ChangePassword method not implemented")
}

// ChangeRoles - Change roles of user, admin roles can only be changed by an admin
func (s *UsersApiService) ChangeRoles(ctx context.Context, userData UserData) (ImplResponse, error) {
	// TODO - update ChangeRoles with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UserIdentity{}) or use other options such as http.Ok ...
	//return Response(200, UserIdentity{}), nil

	//TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	//return Response(400, string{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(500, string{}) or use other options such as http.Ok ...
	//return Response(500, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ChangeRoles method not implemented")
}

// DeleteUser - Delete a user and all its data from the database
func (s *UsersApiService) DeleteUser(ctx context.Context, userData UserData) (ImplResponse, error) {
	// TODO - update DeleteUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(500, string{}) or use other options such as http.Ok ...
	//return Response(500, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteUser method not implemented")
}

// RegisterUser - Register a new user, needs no authentication
func (s *UsersApiService) RegisterUser(ctx context.Context, userData UserData) (ImplResponse, error) {
	// TODO - update RegisterUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, UserIdentity{}) or use other options such as http.Ok ...
	//return Response(201, UserIdentity{}), nil

	//TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	//return Response(400, string{}), nil

	//TODO: Uncomment the next line to return response Response(500, string{}) or use other options such as http.Ok ...
	//return Response(500, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RegisterUser method not implemented")
}
